local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local userInputService = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")
local replicatedStorage = game:GetService("ReplicatedStorage")

-- Initialize variables
local isFlying = false
local isNoClipping = false
local flightSpeed = 50
local walkingSpeed = 16
local defaultSpeed = walkingSpeed
local speedSliderValue = flightSpeed  -- Default flight speed
local targetPlayer = nil
local flightHeight = 50

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local menuFrame = Instance.new("Frame")
menuFrame.Size = UDim2.new(0, 200, 0, 400)
menuFrame.Position = UDim2.new(0, 10, 0, 100)
menuFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
menuFrame.BackgroundTransparency = 0.5
menuFrame.Parent = screenGui

-- Toggle flight button
local flightButton = Instance.new("TextButton")
flightButton.Size = UDim2.new(0, 200, 0, 50)
flightButton.Position = UDim2.new(0, 0, 0, 10)
flightButton.Text = "Toggle Flight"
flightButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
flightButton.Parent = menuFrame

-- Toggle No-Clip button
local noClipButton = Instance.new("TextButton")
noClipButton.Size = UDim2.new(0, 200, 0, 50)
noClipButton.Position = UDim2.new(0, 0, 0, 70)
noClipButton.Text = "Toggle No-Clip"
noClipButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
noClipButton.Parent = menuFrame

-- Teleport button
local tpButton = Instance.new("TextButton")
tpButton.Size = UDim2.new(0, 200, 0, 50)
tpButton.Position = UDim2.new(0, 0, 0, 130)
tpButton.Text = "Teleport to Player"
tpButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
tpButton.Parent = menuFrame

-- Speed Control button
local speedButton = Instance.new("TextButton")
speedButton.Size = UDim2.new(0, 200, 0, 50)
speedButton.Position = UDim2.new(0, 0, 0, 190)
speedButton.Text = "Set Speed"
speedButton.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
speedButton.Parent = menuFrame

-- Speed slider (adjustable flight and walking speed)
local speedSlider = Instance.new("TextBox")
speedSlider.Size = UDim2.new(0, 200, 0, 50)
speedSlider.Position = UDim2.new(0, 0, 0, 250)
speedSlider.Text = "Speed: " .. flightSpeed
speedSlider.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
speedSlider.Parent = menuFrame

-- Function to toggle flight mode
local function toggleFlight()
    isFlying = not isFlying
    if isFlying then
        -- Enable flight
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
        bodyVelocity.Velocity = Vector3.new(0, flightSpeed, 0)
        bodyVelocity.Parent = character.HumanoidRootPart

        local bodyGyro = Instance.new("BodyGyro")
        bodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
        bodyGyro.CFrame = character.HumanoidRootPart.CFrame
        bodyGyro.Parent = character.HumanoidRootPart
    else
        -- Disable flight
        character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
        character.HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
    end
end

-- Function to toggle No-Clip mode
local function toggleNoClip()
    isNoClipping = not isNoClipping
    if isNoClipping then
        -- Make the player able to pass through parts (no collision)
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    else
        -- Restore collision to all parts
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

-- Function to teleport to another player
local function teleportToPlayer()
    if targetPlayer then
        character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
    else
        print("No player selected to teleport to.")
    end
end

-- Function to update the speed from the slider
local function updateSpeed()
    local speedValue = tonumber(speedSlider.Text)
    if speedValue then
        flightSpeed = speedValue
        speedSlider.Text = "Speed: " .. flightSpeed
        walkingSpeed = speedValue
    end
end

-- Listen for the buttons to be clicked
flightButton.MouseButton1Click:Connect(toggleFlight)
noClipButton.MouseButton1Click:Connect(toggleNoClip)
tpButton.MouseButton1Click:Connect(teleportToPlayer)
speedSlider.FocusLost:Connect(updateSpeed)

-- Function to handle flight controls (speed changes and position adjustments)
game:GetService("RunService").Heartbeat:Connect(function()
    if isFlying then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.PlatformStand = true  -- Disable standing on the ground while flying
        end
        -- Apply flight speed and control the movement
        character.HumanoidRootPart.Velocity = Vector3.new(0, flightSpeed, 0)
    else
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.PlatformStand = false  -- Re-enable standing on the ground
            humanoid.WalkSpeed = walkingSpeed
        end
    end
end)

-- Function to handle teleportation to players (set targetPlayer when a player is selected)
game.Players.PlayerAdded:Connect(function(plr)
    if plr ~= player then
        local playerButton = Instance.new("TextButton")
        playerButton.Size = UDim2.new(0, 200, 0, 30)
        playerButton.Text = "Teleport to " .. plr.Name
        playerButton.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
        playerButton.Parent = menuFrame
        playerButton.MouseButton1Click:Connect(function()
            targetPlayer = plr
            print("Target player set to: " .. plr.Name)
        end)
    end
end)

-- Initial speed setup for the player (as walking speed or flight speed)
walkingSpeed = flightSpeed
